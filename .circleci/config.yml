version: 2.0
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Getting code
          command: |
            echo '^^^ Code Files ^^^'
            ls -al
      - run:
          name: Start containers and run tests
          environment:
            IMAGE_NAME: bilgrami/hijricalendar
          command: |      
            set -x
            version="$(awk '$2 == "PRODUCT_VERSION" { print $3; exit }' Dockerfile)"
            echo Product version is ${version};
            docker version # detailed version info for docker
            docker-compose version # detailed version info for docker-compose
            docker pull "$IMAGE_NAME" || true
            docker build -t ${IMAGE_NAME} .
            docker-compose up -d
            docker ps
            docker-compose exec web bash -c 'cd /usr/local/project/hijri_calendar_project && python manage.py test'
            docker-compose exec web bash -c 'cd /usr/local/project/hijri_calendar_project && coverage run --source=. manage.py test'
  #     - run:
  #         name: Deploy to docker hub
  #         environment:
  #           IMAGE_NAME: bilgrami/hijricalendar
  #         command: |      
  #           set -x
  #           version="$(awk '$2 == "PRODUCT_VERSION" { print $3; exit }' Dockerfile)"
  #           echo Product version is ${version};
  #           echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  #           docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
  #           docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${version}"
  #           docker push "${IMAGE_NAME}:latest"
  #           docker push "${IMAGE_NAME}:${version}"
  #           docker images
  #           echo Goodbye
  deploy:
    docker:
      - image: bilgrami/hijricalendar
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD 
    steps:
     - run:
          name: Deploy to docker hub
          environment:
            IMAGE_NAME: bilgrami/hijricalendar
          command: |      
            set -x
            version="$(awk '$2 == "PRODUCT_VERSION" { print $3; exit }' Dockerfile)"
            echo Product version is ${version};
            docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
            docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${version}"
            docker push "${IMAGE_NAME}:latest"
            docker push "${IMAGE_NAME}:${version}"
            docker images
            echo Goodbye
 